/**
 * This class is generated by jOOQ
 */
package com.panjiesw.std.service.user.sql.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StdUser extends org.jooq.impl.TableImpl<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord> {

	private static final long serialVersionUID = 499177297;

	/**
	 * The singleton instance of <code>public.std_user</code>
	 */
	public static final com.panjiesw.std.service.user.sql.tables.StdUser STD_USER = new com.panjiesw.std.service.user.sql.tables.StdUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord> getRecordType() {
		return com.panjiesw.std.service.user.sql.tables.records.StdUserRecord.class;
	}

	/**
	 * The column <code>public.std_user.id</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.std_user.username</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

	/**
	 * The column <code>public.std_user.email</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

	/**
	 * The column <code>public.std_user.password</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>public.std_user.fullname</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.String> FULLNAME = createField("fullname", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>public.std_user.status</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.std_user.reset_token</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.String> RESET_TOKEN = createField("reset_token", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.std_user.created_at</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.Long> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.std_user.updated_at</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.Long> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.std_user.last_login_at</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.Long> LAST_LOGIN_AT = createField("last_login_at", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>public.std_user.role_id</code>.
	 */
	public final org.jooq.TableField<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>public.std_user</code> table reference
	 */
	public StdUser() {
		this("std_user", null);
	}

	/**
	 * Create an aliased <code>public.std_user</code> table reference
	 */
	public StdUser(java.lang.String alias) {
		this(alias, com.panjiesw.std.service.user.sql.tables.StdUser.STD_USER);
	}

	private StdUser(java.lang.String alias, org.jooq.Table<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private StdUser(java.lang.String alias, org.jooq.Table<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.panjiesw.std.service.user.sql.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, java.lang.Long> getIdentity() {
		return com.panjiesw.std.service.user.sql.Keys.IDENTITY_STD_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord> getPrimaryKey() {
		return com.panjiesw.std.service.user.sql.Keys.STD_USER_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord>>asList(com.panjiesw.std.service.user.sql.Keys.STD_USER_PKEY, com.panjiesw.std.service.user.sql.Keys.UNIQUE_USERNAME, com.panjiesw.std.service.user.sql.Keys.UNIQUE_EMAIL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.panjiesw.std.service.user.sql.tables.records.StdUserRecord, ?>>asList(com.panjiesw.std.service.user.sql.Keys.STD_USER__LNK_STD_ROLE_STD_USER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.panjiesw.std.service.user.sql.tables.StdUser as(java.lang.String alias) {
		return new com.panjiesw.std.service.user.sql.tables.StdUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.panjiesw.std.service.user.sql.tables.StdUser rename(java.lang.String name) {
		return new com.panjiesw.std.service.user.sql.tables.StdUser(name, null);
	}
}
